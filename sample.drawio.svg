<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="5732px" height="3992px" viewBox="-0.5 -0.5 5732 3992" content="&lt;mxfile&gt;&lt;diagram id=&quot;9lXC0w_zNI1PaJ90p7jg&quot; name=&quot;Page-1&quot;&gt;&lt;/diagram&gt;&lt;/mxfile&gt;"><defs/><g><path d="M 915.17 1940 L 542.37 2869.09" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 540.42 2873.96 L 539.77 2866.16 L 542.37 2869.09 L 546.27 2868.77 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="880" y="620" width="600" height="1320" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 598px; height: 1px; padding-top: 627px; margin-left: 882px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useDispatch</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">useSelector</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"react-redux"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">React</span><span style="color: #cccccc;">, { </span><span style="color: #9cdcfe;">useEffect</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'react'</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useTypedSelector</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../hooks/useTypedSelector"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">fetchUsers</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../store/action-creators/user"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useActions</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../hooks/useActions"</span></div><br /><br /><div><span style="color: #6a9955;">//component has type: React.FC</span></div><div><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">UserList</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">React</span><span style="color: #cccccc;">.</span><span style="color: #4ec9b0;">FC</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;">()</span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><br /><div><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">Property 'users' does not exist on type 'DefaultRootState'.</span></div><br /><div><span style="color: #6a9955;">    useSelector() не работает с типами, поэтому лучше под </span></div><div><span style="color: #6a9955;">    Тайпскрипт написать свой хук:он по сути из документации</span></div><div><span style="color: #6a9955;">*/</span><span style="color: #cccccc;">  </span></div><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">// const state = useSelector( state =&gt; state.user )</span></div><br /><div><span style="color: #6a9955;">/* Нетипизированный хук закомментили */</span><span style="color: #cccccc;"> </span></div><br /><div><span style="color: #6a9955;">/*типизированный хук */</span><span style="color: #cccccc;">   </span></div><br /><div><span style="color: #6a9955;">/*Place cursor inside desctructuring object:{} and press CTRL+space, </span></div><div><span style="color: #6a9955;">and you will see all the contents  */</span></div><br /><div><span style="color: #6a9955;">//это содержание userReducer</span></div><div><span style="color: #cccccc;">    </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> {</span><span style="color: #4fc1ff;">error</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">loading</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">users</span><span style="color: #cccccc;">} </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useTypedSelector</span><span style="color: #cccccc;">( </span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">user</span><span style="color: #cccccc;"> )</span></div><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">// console.log(state)</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">//this dispatch is not used, when useActions is used</span></div><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">// const dispatch = useDispatch()</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> {</span><span style="color: #dcdcaa;">fetchUsers</span><span style="color: #cccccc;">} </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useActions</span><span style="color: #cccccc;">()</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">//executed func + [dependency]</span></div><div><span style="color: #cccccc;">    </span><span style="color: #dcdcaa;">useEffect</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">        ()</span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//dispatch(fetchUsers()), dispatch is not used, as we use useActions</span></div><div><span style="color: #cccccc;">            </span><span style="color: #dcdcaa;">fetchUsers</span><span style="color: #cccccc;">()</span></div><div><span style="color: #cccccc;">        }, [])</span></div><br /><br /><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">if</span><span style="color: #cccccc;">(</span><span style="color: #4fc1ff;">loading</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> (</span></div><div><span style="color: #cccccc;">            </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span><span style="color: #cccccc;">Loading...</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">        )</span></div><div><span style="color: #cccccc;">    }</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">if</span><span style="color: #cccccc;">(</span><span style="color: #4fc1ff;">error</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">            </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span><span style="color: #cccccc;">Loading error: </span><span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">error</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">        )</span></div><div><span style="color: #cccccc;">    }</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> (</span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">            </span><span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">users</span><span style="color: #d4d4d4;">.</span><span style="color: #dcdcaa;">map</span><span style="color: #d4d4d4;">(</span></div><div><span style="color: #d4d4d4;">                </span><span style="color: #9cdcfe;">user</span><span style="color: #569cd6;">=&gt;</span></div><div><span style="color: #d4d4d4;">                </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #d4d4d4;"> </span><span style="color: #9cdcfe;">key</span><span style="color: #d4d4d4;">=</span><span style="color: #569cd6;">{</span><span style="color: #9cdcfe;">user</span><span style="color: #d4d4d4;">.</span><span style="color: #9cdcfe;">id</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span><span style="color: #569cd6;">{</span><span style="color: #9cdcfe;">user</span><span style="color: #d4d4d4;">.</span><span style="color: #9cdcfe;">name</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">            )</span><span style="color: #569cd6;">}</span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">    )</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">default</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">UserList</span></div></div></div></div></div></foreignObject><text x="882" y="639" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { useDispatch, useSelector } from "react-redux"...</text></switch></g><rect x="0" y="1520" width="620" height="150" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1595px; margin-left: 310px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: nowrap;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-size: 14px; line-height: 19px;"><div><span style="color: #6a9955;">// React 17: Use ReactDOM.render() to render the app</span></div><div><span style="color: #9cdcfe;">ReactDOM</span>.<span style="color: #dcdcaa;">render</span>(</div><div>    <span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">Provider</span> <span style="color: #9cdcfe;">store</span><span style="color: #d4d4d4;">=</span><span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">store</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span></div><div>     <span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">App</span> <span style="color: #808080;">/&gt;</span></div><div>   <span style="color: #808080;">&lt;/</span><span style="color: #4ec9b0;">Provider</span><span style="color: #808080;">&gt;</span>,</div><div>  <span style="color: #9cdcfe;">document</span>.<span style="color: #dcdcaa;">getElementById</span>(<span style="color: #ce9178;">'root'</span>)  <span style="color: #6a9955;">// Target the root element in your HTML</span></div><div>);</div></div></div></div></div></foreignObject><text x="310" y="1599" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px" text-anchor="middle">// React 17: Use ReactDOM.render() to render the app...</text></switch></g><path d="M 343.28 2720 L 331.77 1682.37" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 331.71 1677.12 L 335.29 1684.08 L 331.77 1682.37 L 328.29 1684.16 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="150" y="2720" width="390" height="310" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 388px; height: 1px; padding-top: 2727px; margin-left: 152px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">React</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'react'</span><span style="color: #cccccc;">;</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'./App.css'</span><span style="color: #cccccc;">;</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">UserList</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'./components/UserList'</span><span style="color: #cccccc;">;</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">TodoList</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'./components/TodoList'</span><span style="color: #cccccc;">;</span></div><br /><div><span style="color: #569cd6;">function</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">App</span><span style="color: #cccccc;">() {</span></div><div><span style="color: #cccccc;">  </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> (</span></div><div><span style="color: #cccccc;">    </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">className</span><span style="color: #d4d4d4;">=</span><span style="color: #ce9178;">'App'</span><span style="color: #808080;">&gt;</span><span style="color: #cccccc;">  </span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">UserList</span><span style="color: #cccccc;"> </span><span style="color: #808080;">/&gt;</span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">hr</span><span style="color: #808080;">/&gt;</span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;</span><span style="color: #4ec9b0;">TodoList</span><span style="color: #808080;">/&gt;</span><span style="color: #cccccc;">       </span></div><div><span style="color: #cccccc;">    </span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">  );</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">default</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">App</span><span style="color: #cccccc;">;</span></div></div></div></div></div></foreignObject><text x="152" y="2739" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import React from 'react';...</text></switch></g><path d="M 1830 1880.06 L 1484.68 1561.27" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1480.82 1557.71 L 1488.34 1559.89 L 1484.68 1561.27 L 1483.59 1565.03 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1830 1911.45 L 1289.17 2146.02 Q 1280 2150 1278.31 2159.86 L 1171.08 2783.72" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1170.19 2788.9 L 1167.93 2781.41 L 1171.08 2783.72 L 1174.82 2782.59 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1830" y="1600" width="560" height="380" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 1607px; margin-left: 1832px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">TypedUseSelectorHook</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">useSelector</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"react-redux"</span><span style="color: #cccccc;">;</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">RootState</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../store/reducers"</span><span style="color: #cccccc;">;</span></div><div><span style="color: #6a9955;">/**</span></div><div><span style="color: #6a9955;">Все рецепты хуков есть в документации:</span></div><div><span style="color: #6a9955;">https://react-redux.js.org/using-react-redux/usage-with-typescript#typing-the-useselector-hook</span></div><br /><div><span style="color: #6a9955;">    Создаем useSelector() хук но тот который рабоатет с типaми</span></div><br /><div><span style="color: #6a9955;">    Нужно написать название хука и придать ему тип</span></div><div><span style="color: #6a9955;">    TypedUseSelectorHook, который импортируем из react-redux</span></div><div><span style="color: #6a9955;">    и ему уже присваиваем тип данных RootState, </span></div><div><span style="color: #6a9955;">    который мы взяли из возвращаемого значения rootReducer</span></div><div><span style="color: #6a9955;">*/</span></div><br /><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useTypedSelector</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TypedUseSelectorHook</span><span style="color: #cccccc;">&lt;</span><span style="color: #4ec9b0;">RootState</span><span style="color: #cccccc;">&gt; </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useSelector</span></div></div></div></div></div></foreignObject><text x="1832" y="1619" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { TypedUseSelectorHook, useSelector } from "react-redux";...</text></switch></g><path d="M 5160 713 L 4925.16 883.26" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 4920.91 886.34 L 4924.52 879.4 L 4925.16 883.26 L 4928.63 885.07 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 5160 552.86 L 3276.29 841.18" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3271.11 841.97 L 3277.49 837.45 L 3276.29 841.18 L 3278.55 844.37 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="5160" y="110" width="560" height="800" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 117px; margin-left: 5162px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">These are the types and interfaces from userReducer without comments</span></div><br /><div><span style="color: #6a9955;">the neccessary ones are exported</span></div><br /><div><span style="color: #6a9955;">*/</span></div><br /><div><span style="color: #6a9955;">//interface for State and for returning in function</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">userState</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">users</span><span style="color: #d4d4d4;">:</span><span style="color: #4ec9b0;">any</span><span style="color: #cccccc;">[],</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">loading</span><span style="color: #d4d4d4;">:</span><span style="color: #4ec9b0;">boolean</span><span style="color: #cccccc;">,</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">error</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">null</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">string</span></div><div><span style="color: #cccccc;">}</span></div><br /><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">enum</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">FETCH_USERS</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"FETCH_USERS"</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">FETCH_USERS_SUCCESS</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"FETCH_USERS_SUCCESS"</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">FETCH_USERS_ERROR</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"FETCH_USERS_ERROR"</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchUsersAction</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS</span><span style="color: #cccccc;"> </span><span style="color: #6a9955;">//we pass this directly into dispatch method</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchUsersSuccessAction</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS_SUCCESS</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">payload</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">any</span><span style="color: #cccccc;">[] </span><span style="color: #6a9955;">// array of anytype</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchUsersErrorAction</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS_ERROR</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">payload</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">string</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">}</span></div><br /><br /><div><span style="color: #6a9955;">//TYPE has 3 INTERFACES that have ENUM</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">type</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserAction</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;">  </span><span style="color: #4ec9b0;">FetchUsersAction</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchUsersSuccessAction</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchUsersErrorAction</span></div></div></div></div></div></foreignObject><text x="5162" y="129" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">/*...</text></switch></g><path d="M 3728.83 670 L 3492.35 1650.28 Q 3490 1660 3480.17 1661.84 L 2396.82 1864.83" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2391.66 1865.79 L 2397.89 1861.06 L 2396.82 1864.83 L 2399.18 1867.95 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 3520 201.78 L 3218.5 15.26 Q 3210 10 3200 10.21 L 606.37 64.05" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 601.12 64.16 L 608.04 60.52 L 606.37 64.05 L 608.19 67.52 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="3520" y="80" width="560" height="590" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 87px; margin-left: 3522px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">combineReducers</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"redux"</span><span style="color: #cccccc;">;</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">userReducer</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"./userReducer"</span><span style="color: #cccccc;">;</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">todoReducer</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"./todoRecuder"</span><span style="color: #cccccc;">;</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">rootReducer</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">combineReducers</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">    { </span></div><div><span style="color: #cccccc;">        </span><span style="color: #6a9955;">//user который будет в хуке, которому мы передали возвращаемый тип данныч</span></div><div><span style="color: #cccccc;">        </span><span style="color: #6a9955;">//у user значение все что есть в функции userReducer</span></div><div><span style="color: #cccccc;">        </span><span style="color: #dcdcaa;">user</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">userReducer</span><span style="color: #cccccc;">,</span></div><div><span style="color: #cccccc;">        </span><span style="color: #dcdcaa;">todo</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">todoReducer</span></div><div><span style="color: #cccccc;">    }</span></div><div><span style="color: #cccccc;">)</span></div><br /><div><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">Tаким образом определили типизацию RootState.</span></div><div><span style="color: #6a9955;">ReturnType&lt;typeof rootReducer&gt; (ссылка на ф, а не ее вызов)</span></div><div><span style="color: #6a9955;">позволяет присвоить </span></div><div><span style="color: #6a9955;">возвращаемый тип данных функции rootReducer, не вдоваясь </span></div><div><span style="color: #6a9955;">в подробности в сложную типизацию возвращаемого значения, а </span></div><div><span style="color: #6a9955;">порой даже не зная этой сложной типизации, </span></div><div><span style="color: #6a9955;"> новому типу RootState</span></div><br /><div><span style="color: #6a9955;"> А новый тип RootState теперь такой же тип данных, который</span></div><div><span style="color: #6a9955;"> вернула  rootReducer</span></div><br /><div><span style="color: #6a9955;"> Этот тип будет использован с типизированным useSelector, </span></div><div><span style="color: #6a9955;"> который по умолчанию не работает с типами</span></div><div><span style="color: #6a9955;">*/</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">type</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">RootState</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">ReturnType</span><span style="color: #cccccc;">&lt;</span><span style="color: #569cd6;">typeof</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">rootReducer</span><span style="color: #cccccc;">&gt;</span></div></div></div></div></div></foreignObject><text x="3522" y="99" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { combineReducers } from "redux";...</text></switch></g><path d="M 1941.71 2150 L 1482.99 1285.62" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1480.52 1280.99 L 1486.9 1285.53 L 1482.99 1285.62 L 1480.71 1288.81 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1822.18 2690 L 1454.44 3067.79" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1450.78 3071.55 L 1453.15 3064.09 L 1454.44 3067.79 L 1458.17 3068.97 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="1810" y="2150" width="550" height="540" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 548px; height: 1px; padding-top: 2157px; margin-left: 1812px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useDispatch</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"react-redux"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">bindActionCreators</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"redux"</span></div><br /><div><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">    все actions импортируется в переменную ActionCreators, </span></div><div><span style="color: #6a9955;">*/</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">ActionCreators</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'../store/action-creators/'</span></div><div><span style="color: #6a9955;">//docs about useActions hook in redux: https://react-redux.js.org/api/hooks</span></div><br /><div><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">cуть хука в том, что связываем все actionСreator functions with</span></div><div><span style="color: #6a9955;">this dispatch function</span></div><div><span style="color: #6a9955;">*/</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useActions</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> () </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useDispatch</span><span style="color: #cccccc;">()</span></div><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">//this is to test</span></div><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">// console.log(ActionCreators)</span></div><br /><div><span style="color: #6a9955;">// вызываем action creators они сами прокинуться в dispatch,</span></div><div><span style="color: #6a9955;">// dispatch даже не понадобится</span></div><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">bindActionCreators</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">ActionCreators</span><span style="color: #cccccc;">, </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">)</span></div><div><span style="color: #cccccc;">}</span></div><br /><br /></div></div></div></div></foreignObject><text x="1812" y="2169" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { useDispatch } from "react-redux"...</text></switch></g><path d="M 319.54 140 L 310.53 1513.63" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 310.5 1518.88 L 307.05 1511.86 L 310.53 1513.63 L 314.04 1511.91 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="40" y="0" width="560" height="140" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 7px; margin-left: 42px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> {</span><span style="color: #9cdcfe;">applyMiddleware</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">createStore</span><span style="color: #cccccc;">} </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'redux'</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">rootReducer</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'./reducers'</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;">  </span><span style="color: #9cdcfe;">thunk</span><span style="color: #cccccc;">  </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'redux-thunk'</span><span style="color: #6a9955;">//never forget {} for thunk</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">store</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">createStore</span><span style="color: #cccccc;">(</span><span style="color: #dcdcaa;">rootReducer</span><span style="color: #cccccc;">, </span><span style="color: #dcdcaa;">applyMiddleware</span><span style="color: #cccccc;">(</span><span style="color: #4fc1ff;">thunk</span><span style="color: #cccccc;">))</span></div></div></div></div></div></foreignObject><text x="42" y="19" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import {applyMiddleware, createStore} from 'redux'...</text></switch></g><path d="M 4360 851.67 L 4084.85 617.46" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 4080.85 614.06 L 4088.45 615.93 L 4084.85 617.46 L 4083.91 621.26 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="4360" y="850" width="560" height="480" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 857px; margin-left: 4362px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">UserAction</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">userState</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">UserActionTypes</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../../types/userReducerTypes"</span></div><div><span style="color: #cccccc;">           </span></div><div><span style="color: #cccccc;">           </span></div><div><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">initialState</span><span style="color: #d4d4d4;">:</span><span style="color: #4ec9b0;">userState</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">users</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> [], </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">false</span><span style="color: #cccccc;">, </span><span style="color: #6a9955;">//flag to see if it is loading</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">error</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">null</span><span style="color: #cccccc;"> </span><span style="color: #6a9955;">//error</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">userReducer</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> (</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">initialState</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">action</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserAction</span><span style="color: #cccccc;">)</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">userState</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">switch</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">type</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">        </span><span style="color: #6a9955;">//every case has a different typization thanks to TYPE - INTERFACE - ENUM model</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">true</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">error</span><span style="color: #9cdcfe;">:</span><span style="color: #569cd6;">null</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">users</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;">[]}</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS_SUCCESS</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">false</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">error</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">null</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">users</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">payload</span><span style="color: #cccccc;">}</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS_ERROR</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">false</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">error</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">payload</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">users</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;">[]}</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">default</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">state</span></div><div><span style="color: #cccccc;">    }</span></div><br /><div><span style="color: #cccccc;">}</span></div></div></div></div></div></foreignObject><text x="4362" y="869" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { UserAction, userState, UserActionTypes } from "../../types/userReducerTypes"...</text></switch></g><path d="M 5170 2441.67 L 4895.2 2247.01" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 4890.91 2243.98 L 4898.65 2245.17 L 4895.2 2247.01 L 4894.6 2250.88 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 5170 2720.99 L 3316.12 3257.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3311.07 3258.7 L 3316.83 3253.39 L 3316.12 3257.24 L 3318.77 3260.11 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="5170" y="2190" width="560" height="900" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2197px; margin-left: 5172px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><br /><div><span style="color: #6a9955;">//1 export type for State in Reducer</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoState</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">todos</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">any</span><span style="color: #cccccc;">[], </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">loading</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">boolean</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">error</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">null</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">string</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">page</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">number</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">limit</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">number</span></div><div><span style="color: #cccccc;">}</span></div><br /><br /><div><span style="color: #6a9955;">//3 export to the reducer</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">enum</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">FETCH_TODOS</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'FETCH_TODOS'</span><span style="color: #cccccc;">,</span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">FETCH_TODOS_SUCCESS</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'FETCH_TODOS_SUCCESS'</span><span style="color: #cccccc;">,</span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">FETCH_TODOS_ERROR</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'FETCH_TODOS_ERROR'</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #4fc1ff;">SET_TODO_PAGE</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'SET_TODO_PAGE'</span></div><div><span style="color: #cccccc;">}</span></div><br /><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchTodoAction</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchTodoSuccessAction</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS_SUCCESS</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">payload</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">any</span><span style="color: #cccccc;">[]</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchTodoErrorAction</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS_ERROR</span><span style="color: #cccccc;">,</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">payload</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">string</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #569cd6;">interface</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">SetTodoPage</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">type</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">SET_TODO_PAGE</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">payload</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">number</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #6a9955;">//2 export type for Action in Reducer: type &lt;- interface &lt;- enum</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">type</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoAction</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">    </span><span style="color: #4ec9b0;">FetchTodoAction</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">    </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchTodoSuccessAction</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">    </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">FetchTodoErrorAction</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">    </span><span style="color: #d4d4d4;">|</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">SetTodoPage</span></div></div></div></div></div></foreignObject><text x="5172" y="2209" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">//1 export type for State in Reducer...</text></switch></g><path d="M 4330 1760 L 3915.16 675.95" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 3913.29 671.04 L 3919.06 676.33 L 3915.16 675.95 L 3912.52 678.83 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="4330" y="1760" width="560" height="570" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 1767px; margin-left: 4332px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">TodoAction</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">TodoActionTypes</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">TodoState</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../../types/todoReducerTypes"</span></div><br /><div><span style="color: #6a9955;">//press ctrl+space to fill the fields</span></div><div><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">initialState</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoState</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">todos</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> [], </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">page</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #b5cea8;">1</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">error</span><span style="color: #9cdcfe;">:</span><span style="color: #569cd6;">null</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">limit</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #b5cea8;">10</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">false</span></div><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">todoReducer</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> (</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">initialState</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">action</span><span style="color: #d4d4d4;">:</span><span style="color: #4ec9b0;">TodoAction</span><span style="color: #cccccc;">)</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoState</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">switch</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">type</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #d4d4d4;">...</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #569cd6;">true</span><span style="color: #cccccc;"> } </span><span style="color: #6a9955;">//</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS_SUCCESS</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #d4d4d4;">...</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #569cd6;">false</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">todos</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">payload</span><span style="color: #cccccc;"> } </span><span style="color: #6a9955;">// data loaded, so false</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS_ERROR</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #d4d4d4;">...</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">loading</span><span style="color: #9cdcfe;">:</span><span style="color: #569cd6;">false</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">error</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">payload</span><span style="color: #cccccc;"> }</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">case</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">SET_TODO_PAGE</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> {</span><span style="color: #d4d4d4;">...</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">page</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">action</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">payload</span><span style="color: #cccccc;"> }</span></div><br /><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">default</span><span style="color: #cccccc;">:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">state</span></div><div><span style="color: #cccccc;">    }</span></div><div><span style="color: #cccccc;">}</span></div></div></div></div></div></foreignObject><text x="4332" y="1779" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { TodoAction, TodoActionTypes, TodoState } from "../../types/todoReducerTypes"...</text></switch></g><path d="M 2710 946.1 L 1486.22 1213.17" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1481.09 1214.29 L 1487.19 1209.38 L 1486.22 1213.17 L 1488.68 1216.22 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2894.82 1620 L 2824.41 2163.68" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2823.74 2168.89 L 2821.17 2161.5 L 2824.41 2163.68 L 2828.11 2162.4 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2710" y="150" width="560" height="1470" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 157px; margin-left: 2712px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">Dispatch</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"redux"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">UserAction</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">UserActionTypes</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../../types/userReducerTypes"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">axios</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"axios"</span></div><br /><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">fetchUsers</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> () </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">        </span><span style="color: #6a9955;">//Dispatch&lt;UserAction&gt;, UserAction is type, which has 3 interfaces, inside which there are enums</span></div><div><span style="color: #cccccc;">        </span><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">        </span></div><div><span style="color: #6a9955;">            Union Types and dispatch: </span></div><div><span style="color: #6a9955;">                By typing dispatch as Dispatch&lt;UserAction&gt;, you're telling </span></div><div><span style="color: #6a9955;">                TypeScript that the dispatch function expects actions that </span></div><div><span style="color: #6a9955;">                adhere to the UserAction type, which is a union of three </span></div><div><span style="color: #6a9955;">                different interfaces (FetchUsersAction | FetchUsersSuccessAction | FetchUsersErrorAction).</span></div><br /><br /><div><span style="color: #6a9955;">            This means you can dispatch an object that matches any of </span></div><div><span style="color: #6a9955;">            the three interfaces, and TypeScript will automatically infer </span></div><div><span style="color: #6a9955;">            whether the dispatched action is valid based on the type and </span></div><div><span style="color: #6a9955;">            other properties.</span></div><br /><div><span style="color: #6a9955;">            Dispatching Action Objects: When you call </span></div><div><span style="color: #6a9955;">            dispatch({ type: UserActionTypes.FETCH_USERS }), </span></div><div><span style="color: #6a9955;">            you're creating an object. The type property is a string literal </span></div><div><span style="color: #6a9955;">            defined by the UserActionTypes enum. This object matches one of </span></div><div><span style="color: #6a9955;">            the action interfaces (FetchUsersAction in this case).</span></div><br /><div><span style="color: #6a9955;">            The reason this works is because actions in Redux (or </span></div><div><span style="color: #6a9955;">            similar state management systems) are just plain JavaScript objects, </span></div><div><span style="color: #6a9955;">            and in this case, you're using TypeScript to ensure that </span></div><div><span style="color: #6a9955;">            these objects match the expected structure (defined by </span></div><div><span style="color: #6a9955;">            the UserAction union type).</span></div><div><span style="color: #6a9955;">                                 </span></div><div><span style="color: #6a9955;">        */</span></div><div><span style="color: #cccccc;">        </span></div><div><span style="color: #cccccc;">        </span></div><div><span style="color: #cccccc;">        </span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">async</span><span style="color: #cccccc;">(</span><span style="color: #dcdcaa;">dispatch</span><span style="color: #d4d4d4;">:</span><span style="color: #4ec9b0;">Dispatch</span><span style="color: #cccccc;">&lt;</span><span style="color: #4ec9b0;">UserAction</span><span style="color: #cccccc;">&gt;) </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">        </span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">try</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//passing enum values </span></div><div><span style="color: #cccccc;">            </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">({</span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS</span><span style="color: #cccccc;"> })</span><span style="color: #6a9955;">// getting users</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//axios is the library to fetch the data</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//if you mistyped the link there should be error message</span></div><div><span style="color: #cccccc;">            </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">response</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">await</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">axios</span><span style="color: #cccccc;">.</span><span style="color: #dcdcaa;">get</span><span style="color: #cccccc;">(</span><span style="color: #ce9178;">"https://jsonplaceholder.typicode.com/users"</span><span style="color: #cccccc;">)</span></div><div><span style="color: #cccccc;">            </span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//this is to check if the data has the id, so I can use it in list</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">// console.log(response)</span></div><div><span style="color: #cccccc;">            </span></div><div><span style="color: #cccccc;">            </span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//got users and change the state</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">// dispatch({type:UserActionTypes.FETCH_USERS_SUCCESS, payload:response.data })</span></div><br /><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">                setTimeout is used for the imitation of the delay:</span></div><div><span style="color: #6a9955;">                как будто нагруженный сервер</span></div><br /><div><span style="color: #6a9955;">            */</span></div><div><span style="color: #cccccc;">           </span><span style="color: #dcdcaa;">setTimeout</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">            ()</span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">                </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">({</span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS_SUCCESS</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">payload</span><span style="color: #9cdcfe;">:</span><span style="color: #4fc1ff;">response</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">data</span><span style="color: #cccccc;"> })</span></div><div><span style="color: #cccccc;">            }, </span><span style="color: #b5cea8;">500</span></div><div><span style="color: #cccccc;">           )</span></div><br /><br /><div><span style="color: #cccccc;">        }</span><span style="color: #c586c0;">catch</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">e</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//when you catch an error, there should be payload:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">( {</span></div><div><span style="color: #cccccc;">                </span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #4ec9b0;">UserActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_USERS_ERROR</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">                </span><span style="color: #9cdcfe;">payload</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"Error happened when loading users"</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">            } )</span></div><div><span style="color: #cccccc;">        }</span></div><br /><div><span style="color: #cccccc;">    }</span></div><div><span style="color: #cccccc;">}</span></div></div></div></div></div></foreignObject><text x="2712" y="169" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import { Dispatch } from "redux"...</text></switch></g><path d="M 2530 2252.35 L 2365.8 2239.07" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2360.56 2238.65 L 2367.82 2235.73 L 2365.8 2239.07 L 2367.26 2242.7 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2530" y="2170" width="560" height="210" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2177px; margin-left: 2532px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #6a9955;">//all the exports (for user and todo) into one file for user</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">*</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">as</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">UserActionCreators</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'./user'</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">*</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">as</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">TodoActionCreators</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">'./todo'</span></div><br /><div><span style="color: #6a9955;">//exporting all the action creators</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">default</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">    </span><span style="color: #d4d4d4;">...</span><span style="color: #9cdcfe;">UserActionCreators</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">    </span><span style="color: #d4d4d4;">...</span><span style="color: #9cdcfe;">TodoActionCreators</span></div><div><span style="color: #cccccc;">}</span></div><br /></div></div></div></div></foreignObject><text x="2532" y="2189" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">//all the exports (for user and todo) into one file for user...</text></switch></g><path d="M 2895.73 2690 L 2832.98 2386.24" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 2831.92 2381.09 L 2836.76 2387.24 L 2832.98 2386.24 L 2829.9 2388.66 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 2750 3343.01 L 1456.37 3356.92" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1451.12 3356.98 L 1458.08 3353.4 L 1456.37 3356.92 L 1458.16 3360.4 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="2750" y="2690" width="560" height="1300" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2697px; margin-left: 2752px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #6a9955;">//this is the Dispatch for typization </span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">Dispatch</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"redux"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">axios</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"axios"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">TodoAction</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">TodoActionTypes</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../../types/todoReducerTypes"</span></div><br /><br /><div><span style="color: #6a9955;">//Это первый фетч (Автор называет его action), который заберет себе хук useActions</span></div><div><span style="color: #6a9955;">//passing page and limit</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">fetchTodos</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> (</span><span style="color: #9cdcfe;">page</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #b5cea8;">1</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">limit</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #b5cea8;">10</span><span style="color: #cccccc;">) </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">      </span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">async</span><span style="color: #cccccc;">(</span><span style="color: #dcdcaa;">dispatch</span><span style="color: #d4d4d4;">:</span><span style="color: #4ec9b0;">Dispatch</span><span style="color: #cccccc;">&lt;</span><span style="color: #4ec9b0;">TodoAction</span><span style="color: #cccccc;">&gt;) </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;"> {</span></div><div><span style="color: #cccccc;">        </span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">try</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//passing enum values as CONSTANTs</span></div><div><span style="color: #cccccc;">            </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">({</span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS</span><span style="color: #cccccc;"> })</span><span style="color: #6a9955;">// getting todos </span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//axios is the library to fetch the data</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//if you mistyped the link there should be error message</span></div><div><span style="color: #cccccc;">            </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">response</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">await</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">axios</span><span style="color: #cccccc;">.</span><span style="color: #dcdcaa;">get</span><span style="color: #cccccc;">(</span><span style="color: #ce9178;">"https://jsonplaceholder.typicode.com/todos"</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">                </span><span style="color: #6a9955;">/*</span></div><div><span style="color: #6a9955;">                    In summary:</span></div><br /><div><span style="color: #6a9955;">                    The second parameter is an options object {}, </span></div><div><span style="color: #6a9955;">                    and specifically the params property within it adds query parameters to the URL, </span></div><div><span style="color: #6a9955;">                    which are included in the HTTP request to control things like pagination, </span></div><div><span style="color: #6a9955;">                    filtering, or sorting on the server side. </span></div><div><span style="color: #6a9955;">                    In this case, it adds _page and _limit as query parameters to the URL.</span></div><div><span style="color: #6a9955;">                    </span></div><div><span style="color: #6a9955;">                    Example:</span></div><div><span style="color: #6a9955;">                    If page = 2 and limit = 10, the resulting URL would be: </span></div><div><span style="color: #6a9955;">                    https://jsonplaceholder.typicode.com/todos?_page=2&amp;_limit=10</span></div><br /><div><span style="color: #6a9955;">                */</span></div><div><span style="color: #cccccc;">                {</span><span style="color: #9cdcfe;">params</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> {</span><span style="color: #9cdcfe;">_page</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">page</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">_limit</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">limit</span><span style="color: #cccccc;">} } )</span></div><div><span style="color: #cccccc;">            </span></div><div><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">           </span><span style="color: #dcdcaa;">setTimeout</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">            ()</span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">                </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">({</span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS_SUCCESS</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">payload</span><span style="color: #9cdcfe;">:</span><span style="color: #4fc1ff;">response</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">data</span><span style="color: #cccccc;"> })</span></div><div><span style="color: #cccccc;">            }, </span><span style="color: #b5cea8;">500</span></div><div><span style="color: #cccccc;">           )</span></div><br /><br /><div><span style="color: #cccccc;">        }</span><span style="color: #c586c0;">catch</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">e</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//when you catch an error, there should be payload:</span></div><div><span style="color: #cccccc;">            </span><span style="color: #dcdcaa;">dispatch</span><span style="color: #cccccc;">( {</span></div><div><span style="color: #cccccc;">                </span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">FETCH_TODOS_ERROR</span><span style="color: #cccccc;">, </span></div><div><span style="color: #cccccc;">                </span><span style="color: #9cdcfe;">payload</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"Error happened when loading users"</span><span style="color: #cccccc;"> </span></div><div><span style="color: #cccccc;">            } )</span></div><div><span style="color: #cccccc;">        }</span></div><br /><div><span style="color: #cccccc;">    }</span></div><div><span style="color: #cccccc;">}</span></div><br /><br /><div><span style="color: #6a9955;">//another action, which return an object with type, and a current page payload</span></div><div><span style="color: #6a9955;">// for changing page (32:29)</span></div><div><span style="color: #6a9955;">//we dont use dispatch here, as we will export it to useActions hook,</span></div><div><span style="color: #6a9955;">// which will attach dispatch function</span></div><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #569cd6;">function</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">setTodoPage</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">page</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">number</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">type</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">TodoActionTypes</span><span style="color: #cccccc;">.</span><span style="color: #4fc1ff;">SET_TODO_PAGE</span><span style="color: #cccccc;">,  </span><span style="color: #9cdcfe;">payload</span><span style="color: #9cdcfe;">:</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">page</span><span style="color: #cccccc;"> } </span></div><br /><div><span style="color: #cccccc;">}</span></div></div></div></div></div></foreignObject><text x="2752" y="2709" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">//this is the Dispatch for typization...</text></switch></g><path d="M 890 3178.89 L 545.35 2955.96" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 540.94 2953.11 L 548.72 2953.97 L 545.35 2955.96 L 544.92 2959.85 Z" fill="rgb(0, 0, 0)" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><rect x="890" y="2790" width="560" height="1140" fill="none" stroke="none" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 558px; height: 1px; padding-top: 2797px; margin-left: 892px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left;"><div style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; white-space: normal; overflow-wrap: normal;"><div style="color: rgb(204, 204, 204); background-color: rgb(31, 31, 31); font-family: &quot;Droid Sans Mono&quot;, &quot;monospace&quot;, monospace; font-weight: normal; font-size: 14px; line-height: 19px;"><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">React</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"react"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useEffect</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"react"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useActions</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../hooks/useActions"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">useTypedSelector</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../hooks/useTypedSelector"</span></div><div><span style="color: #c586c0;">import</span><span style="color: #cccccc;"> { </span><span style="color: #9cdcfe;">fetchTodos</span><span style="color: #cccccc;">, </span><span style="color: #9cdcfe;">setTodoPage</span><span style="color: #cccccc;"> } </span><span style="color: #c586c0;">from</span><span style="color: #cccccc;"> </span><span style="color: #ce9178;">"../store/action-creators/todo"</span></div><br /><br /><div><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">TodoList</span><span style="color: #d4d4d4;">:</span><span style="color: #cccccc;"> </span><span style="color: #4ec9b0;">React</span><span style="color: #cccccc;">.</span><span style="color: #4ec9b0;">FC</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> () </span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">    </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> {</span><span style="color: #4fc1ff;">page</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">loading</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">error</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">todos</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">limit</span><span style="color: #cccccc;">} </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useTypedSelector</span><span style="color: #cccccc;">(</span><span style="color: #9cdcfe;">state</span><span style="color: #569cd6;">=&gt;</span><span style="color: #9cdcfe;">state</span><span style="color: #cccccc;">.</span><span style="color: #9cdcfe;">todo</span><span style="color: #cccccc;">)</span></div><div><span style="color: #cccccc;">    </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> {</span><span style="color: #dcdcaa;">fetchTodos</span><span style="color: #cccccc;">, </span><span style="color: #dcdcaa;">setTodoPage</span><span style="color: #cccccc;">} </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> </span><span style="color: #dcdcaa;">useActions</span><span style="color: #cccccc;">()</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #6a9955;">//adding pagination</span></div><div><span style="color: #cccccc;">    </span><span style="color: #569cd6;">const</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">pages</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #cccccc;"> [</span><span style="color: #b5cea8;">1</span><span style="color: #cccccc;">, </span><span style="color: #b5cea8;">2</span><span style="color: #cccccc;">, </span><span style="color: #b5cea8;">3</span><span style="color: #cccccc;">, </span><span style="color: #b5cea8;">4</span><span style="color: #cccccc;">, </span><span style="color: #b5cea8;">5</span><span style="color: #cccccc;">]</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #dcdcaa;">useEffect</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">        ()</span><span style="color: #569cd6;">=&gt;</span><span style="color: #cccccc;">{</span></div><div><span style="color: #cccccc;">            </span><span style="color: #6a9955;">//dispatch(fetchUsers()), dispatch is not used, as we use useActions</span></div><div><span style="color: #cccccc;">            </span><span style="color: #dcdcaa;">fetchTodos</span><span style="color: #cccccc;">(</span><span style="color: #4fc1ff;">page</span><span style="color: #cccccc;">, </span><span style="color: #4fc1ff;">limit</span><span style="color: #cccccc;">)</span></div><div><span style="color: #cccccc;">        }, [</span><span style="color: #4fc1ff;">page</span><span style="color: #cccccc;">])</span></div><br /><br /><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">if</span><span style="color: #cccccc;">(</span><span style="color: #4fc1ff;">loading</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> (</span></div><div><span style="color: #cccccc;">            </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span><span style="color: #cccccc;">Loading...</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">        )</span></div><div><span style="color: #cccccc;">    }</span></div><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">if</span><span style="color: #cccccc;">(</span><span style="color: #4fc1ff;">error</span><span style="color: #cccccc;">){</span></div><div><span style="color: #cccccc;">        </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;">(</span></div><div><span style="color: #cccccc;">            </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span><span style="color: #cccccc;">Loading error: </span><span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">error</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">h1</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">        )</span></div><div><span style="color: #cccccc;">    }</span></div><br /><div><span style="color: #cccccc;">    </span><span style="color: #c586c0;">return</span><span style="color: #cccccc;"> (</span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">            </span><span style="color: #569cd6;">{</span><span style="color: #4fc1ff;">todos</span><span style="color: #d4d4d4;">.</span><span style="color: #dcdcaa;">map</span><span style="color: #d4d4d4;">( </span><span style="color: #9cdcfe;">el</span><span style="color: #569cd6;">=&gt;</span></div><div><span style="color: #d4d4d4;">            </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #d4d4d4;"> </span><span style="color: #9cdcfe;">key</span><span style="color: #d4d4d4;">=</span><span style="color: #569cd6;">{</span><span style="color: #9cdcfe;">el</span><span style="color: #d4d4d4;">.</span><span style="color: #9cdcfe;">id</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span><span style="color: #569cd6;">{</span><span style="color: #9cdcfe;">el</span><span style="color: #d4d4d4;">.</span><span style="color: #9cdcfe;">id</span><span style="color: #569cd6;">}</span><span style="color: #d4d4d4;"> - </span><span style="color: #569cd6;">{</span><span style="color: #9cdcfe;">el</span><span style="color: #d4d4d4;">.</span><span style="color: #9cdcfe;">title</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">            )</span><span style="color: #569cd6;">}</span></div><div><span style="color: #cccccc;">            </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span><span style="color: #cccccc;"> </span><span style="color: #9cdcfe;">style</span><span style="color: #cccccc;"> </span><span style="color: #d4d4d4;">=</span><span style="color: #569cd6;">{</span><span style="color: #d4d4d4;">{</span><span style="color: #9cdcfe;">display</span><span style="color: #9cdcfe;">:</span><span style="color: #d4d4d4;"> </span><span style="color: #ce9178;">'flex'</span><span style="color: #d4d4d4;">}</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">            </span><span style="color: #569cd6;">{</span><span style="color: #6a9955;">/* including pagination */</span><span style="color: #569cd6;">}</span></div><div><span style="color: #cccccc;">                </span><span style="color: #569cd6;">{</span></div><div><span style="color: #d4d4d4;">                    </span><span style="color: #4fc1ff;">pages</span><span style="color: #d4d4d4;">.</span><span style="color: #dcdcaa;">map</span><span style="color: #d4d4d4;">( </span><span style="color: #9cdcfe;">el</span><span style="color: #569cd6;">=&gt;</span></div><div><span style="color: #d4d4d4;">                        </span><span style="color: #808080;">&lt;</span><span style="color: #569cd6;">div</span></div><div><span style="color: #d4d4d4;">                        </span><span style="color: #6a9955;">//changing page on click</span></div><div><span style="color: #d4d4d4;">                        </span><span style="color: #9cdcfe;">onClick</span><span style="color: #d4d4d4;"> = </span><span style="color: #569cd6;">{</span><span style="color: #d4d4d4;">()</span><span style="color: #569cd6;">=&gt;</span><span style="color: #dcdcaa;">setTodoPage</span><span style="color: #d4d4d4;">(</span><span style="color: #9cdcfe;">el</span><span style="color: #d4d4d4;">)</span><span style="color: #569cd6;">}</span></div><div><span style="color: #d4d4d4;">                        </span><span style="color: #9cdcfe;">style</span><span style="color: #d4d4d4;">=</span><span style="color: #569cd6;">{</span><span style="color: #d4d4d4;">{</span><span style="color: #9cdcfe;">border</span><span style="color: #9cdcfe;">:</span><span style="color: #d4d4d4;"> </span><span style="color: #9cdcfe;">el</span><span style="color: #d4d4d4;"> === </span><span style="color: #4fc1ff;">page</span><span style="color: #d4d4d4;"> ? </span><span style="color: #ce9178;">'2px solid green'</span><span style="color: #d4d4d4;"> : </span><span style="color: #ce9178;">'1px solid gray'</span><span style="color: #d4d4d4;">, </span><span style="color: #9cdcfe;">padding</span><span style="color: #9cdcfe;">:</span><span style="color: #d4d4d4;"> </span><span style="color: #b5cea8;">10</span><span style="color: #d4d4d4;"> }</span><span style="color: #569cd6;">}</span></div><div><span style="color: #d4d4d4;">                        </span><span style="color: #808080;">&gt;</span><span style="color: #569cd6;">{</span><span style="color: #9cdcfe;">el</span><span style="color: #569cd6;">}</span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #d4d4d4;">                    )</span></div><div><span style="color: #d4d4d4;">                </span><span style="color: #569cd6;">}</span></div><div><span style="color: #cccccc;">            </span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">        </span><span style="color: #808080;">&lt;/</span><span style="color: #569cd6;">div</span><span style="color: #808080;">&gt;</span></div><div><span style="color: #cccccc;">    )</span></div><br /><div><span style="color: #cccccc;">}</span></div><br /><div><span style="color: #c586c0;">export</span><span style="color: #cccccc;"> </span><span style="color: #c586c0;">default</span><span style="color: #cccccc;"> </span><span style="color: #4fc1ff;">TodoList</span></div></div></div></div></div></foreignObject><text x="892" y="2809" fill="rgb(0, 0, 0)" font-family="Helvetica" font-size="12px">import React from "react"...</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>